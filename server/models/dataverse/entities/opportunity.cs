#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SampleModel
{
	
	
	/// <summary>
	/// Catégories utilisées pour la prévision.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum msdyn_opportunity_msdyn_forecastcategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pipeline = 100000001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Meilleurincident = 100000002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Valid_e = 100000003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Omis_e = 100000004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Conclu_e = 100000005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Perdu_e = 100000006,
	}
	
	/// <summary>
	/// Qualité de l'opportunité, telle que très intéressé.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum opportunity_opportunityratingcode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Trsintress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Intress = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Peuintress = 3,
	}
	
	/// <summary>
	/// Priorité de l'opportunité.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum opportunity_prioritycode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Valeurpardfaut = 1,
	}
	
	/// <summary>
	/// Code personnalisable représentant la phase en cours d'une opportunité dans un processus de vente manuel. Conçu pour prendre en charge les processus de vente manuels mis à niveau par rapport aux versions précédentes de Microsoft Dynamics 365.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum opportunity_salesstagecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Valeurpardfaut = 1,
	}
	
	/// <summary>
	/// Statut de l'opportunité.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum opportunity_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Won = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Lost = 2,
	}
	
	/// <summary>
	/// Raison du statut de l'opportunité.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum opportunity_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Encours = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Suspendue = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Conclue = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Annule = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		puise = 5,
	}
	
	/// <summary>
	/// Chronologie
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public enum opportunity_timeline
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Immdiat = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cetrimestre = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Letrimestreprochain = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cetteanne = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pasconnu = 4,
	}
	
	/// <summary>
	/// Événement potentiellement générateur de revenus (ou vente à un compte) qui doit être suivi jusqu'à sa conclusion via un processus de vente.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("opportunity")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.6")]
	public partial class Opportunity : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the opportunity entity
		/// </summary>
		public partial class Fields
		{
			public const string AccountId = "accountid";
			public const string AccountIdName = "accountidname";
			public const string AccountIdYomiName = "accountidyominame";
			public const string ActualCloseDate = "actualclosedate";
			public const string ActualValue = "actualvalue";
			public const string ActualValue_Base = "actualvalue_base";
			public const string BudgetAmount = "budgetamount";
			public const string BudgetAmount_Base = "budgetamount_base";
			public const string BudgetStatus = "budgetstatus";
			public const string BudgetTypeName = "budgettypename";
			public const string CampaignId = "campaignid";
			public const string CampaignIdName = "campaignidname";
			public const string CaptureProposalFeedback = "captureproposalfeedback";
			public const string CaptureProposalFeedbackName = "captureproposalfeedbackname";
			public const string CloseProbability = "closeprobability";
			public const string CompleteFinalProposal = "completefinalproposal";
			public const string CompleteFinalProposalName = "completefinalproposalname";
			public const string CompleteInternalReview = "completeinternalreview";
			public const string CompleteInternalReviewName = "completeinternalreviewname";
			public const string ConfirmInterest = "confirminterest";
			public const string ConfirmInterestName = "confirminterestname";
			public const string ContactId = "contactid";
			public const string ContactIdName = "contactidname";
			public const string ContactIdYomiName = "contactidyominame";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CurrentSituation = "currentsituation";
			public const string CustomerId = "customerid";
			public const string CustomerIdName = "customeridname";
			public const string CustomerIdYomiName = "customeridyominame";
			public const string CustomerNeed = "customerneed";
			public const string CustomerPainPoints = "customerpainpoints";
			public const string DecisionMaker = "decisionmaker";
			public const string DecisionMakerName = "decisionmakername";
			public const string Description = "description";
			public const string DevelopProposal = "developproposal";
			public const string DevelopProposalName = "developproposalname";
			public const string DiscountAmount = "discountamount";
			public const string DiscountAmount_Base = "discountamount_base";
			public const string DiscountPercentage = "discountpercentage";
			public const string EmailAddress = "emailaddress";
			public const string EstimatedCloseDate = "estimatedclosedate";
			public const string EstimatedValue = "estimatedvalue";
			public const string EstimatedValue_Base = "estimatedvalue_base";
			public const string EvaluateFit = "evaluatefit";
			public const string EvaluateFitName = "evaluatefitname";
			public const string ExchangeRate = "exchangerate";
			public const string FileDebrief = "filedebrief";
			public const string FileDeBriefName = "filedebriefname";
			public const string FinalDecisionDate = "finaldecisiondate";
			public const string FreightAmount = "freightamount";
			public const string FreightAmount_Base = "freightamount_base";
			public const string IdentifyCompetitors = "identifycompetitors";
			public const string IdentifyCompetitorsName = "identifycompetitorsname";
			public const string IdentifyCustomerContacts = "identifycustomercontacts";
			public const string IdentifyCustomerContactsName = "identifycustomercontactsname";
			public const string IdentifyPursuitTeam = "identifypursuitteam";
			public const string IdentifyPursuitTeamName = "identifypursuitteamname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InitialCommunication = "initialcommunication";
			public const string InitialCommunicationName = "initialcommunicationname";
			public const string IsPrivateName = "isprivatename";
			public const string IsRevenueSystemCalculated = "isrevenuesystemcalculated";
			public const string IsRevenueSystemCalculatedName = "isrevenuesystemcalculatedname";
			public const string LastOnHoldTime = "lastonholdtime";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string msdyn_forecastcategory = "msdyn_forecastcategory";
			public const string msdyn_forecastcategoryName = "msdyn_forecastcategoryname";
			public const string msdyn_gdproptout = "msdyn_gdproptout";
			public const string msdyn_gdproptoutName = "msdyn_gdproptoutname";
			public const string msdyn_OpportunityGrade = "msdyn_opportunitygrade";
			public const string msdyn_opportunitygradeName = "msdyn_opportunitygradename";
			public const string msdyn_opportunitykpiid = "msdyn_opportunitykpiid";
			public const string msdyn_opportunitykpiidName = "msdyn_opportunitykpiidname";
			public const string msdyn_OpportunityScore = "msdyn_opportunityscore";
			public const string msdyn_OpportunityScoreTrend = "msdyn_opportunityscoretrend";
			public const string msdyn_opportunityscoretrendName = "msdyn_opportunityscoretrendname";
			public const string msdyn_PredictiveScoreId = "msdyn_predictivescoreid";
			public const string msdyn_PredictiveScoreIdName = "msdyn_predictivescoreidname";
			public const string msdyn_ScoreHistory = "msdyn_scorehistory";
			public const string msdyn_ScoreReasons = "msdyn_scorereasons";
			public const string msdyn_segmentid = "msdyn_segmentid";
			public const string msdyn_segmentidName = "msdyn_segmentidname";
			public const string msdyn_similaropportunities = "msdyn_similaropportunities";
			public const string mso_approval_code = "mso_approval_code";
			public const string mso_approval_codeName = "mso_approval_codename";
			public const string mso_origincode = "mso_origincode";
			public const string mso_origincodeName = "mso_origincodename";
			public const string Name = "name";
			public const string Need = "need";
			public const string NeedName = "needname";
			public const string OnHoldTime = "onholdtime";
			public const string OpportunityId = "opportunityid";
			public const string Id = "opportunityid";
			public const string OpportunityRatingCode = "opportunityratingcode";
			public const string OpportunityRatingCodeName = "opportunityratingcodename";
			public const string OriginatingLeadId = "originatingleadid";
			public const string OriginatingLeadIdName = "originatingleadidname";
			public const string OriginatingLeadIdYomiName = "originatingleadidyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ParentAccountId = "parentaccountid";
			public const string ParentAccountIdName = "parentaccountidname";
			public const string ParentAccountIdYomiName = "parentaccountidyominame";
			public const string ParentContactId = "parentcontactid";
			public const string ParentContactIdName = "parentcontactidname";
			public const string ParentContactIdYomiName = "parentcontactidyominame";
			public const string ParticipatesInWorkflow = "participatesinworkflow";
			public const string ParticipatesInWorkflowName = "participatesinworkflowname";
			public const string PresentFinalProposal = "presentfinalproposal";
			public const string PresentFinalProposalName = "presentfinalproposalname";
			public const string PresentProposal = "presentproposal";
			public const string PresentProposalName = "presentproposalname";
			public const string PriceLevelId = "pricelevelid";
			public const string PriceLevelIdName = "pricelevelidname";
			public const string PricingErrorCode = "pricingerrorcode";
			public const string PricingErrorCodeName = "pricingerrorcodename";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string ProcessId = "processid";
			public const string ProposedSolution = "proposedsolution";
			public const string PurchaseProcess = "purchaseprocess";
			public const string PurchaseProcessName = "purchaseprocessname";
			public const string PurchaseTimeframe = "purchasetimeframe";
			public const string PurchaseTimeframeName = "purchasetimeframename";
			public const string PursuitDecision = "pursuitdecision";
			public const string PursuitDecisionName = "pursuitdecisionname";
			public const string QualificationComments = "qualificationcomments";
			public const string QuoteComments = "quotecomments";
			public const string ResolveFeedback = "resolvefeedback";
			public const string ResolveFeedbackName = "resolvefeedbackname";
			public const string SalesStage = "salesstage";
			public const string SalesStageCode = "salesstagecode";
			public const string SalesStageCodeName = "salesstagecodename";
			public const string SalesStageName = "salesstagename";
			public const string ScheduleFollowup_Prospect = "schedulefollowup_prospect";
			public const string ScheduleFollowup_Qualify = "schedulefollowup_qualify";
			public const string ScheduleProposalMeeting = "scheduleproposalmeeting";
			public const string SendThankYouNote = "sendthankyounote";
			public const string SendThankYouNoteName = "sendthankyounotename";
			public const string SkipPriceCalculation = "skippricecalculation";
			public const string skippricecalculationName = "skippricecalculationname";
			public const string SLAId = "slaid";
			public const string SLAInvokedId = "slainvokedid";
			public const string SLAInvokedIdName = "slainvokedidname";
			public const string SLAName = "slaname";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string StepId = "stepid";
			public const string StepName = "stepname";
			public const string TeamsFollowed = "teamsfollowed";
			public const string TimeLine = "timeline";
			public const string TimelineName = "timelinename";
			public const string TimeSpentByMeOnEmailAndMeetings = "timespentbymeonemailandmeetings";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TotalAmount = "totalamount";
			public const string TotalAmount_Base = "totalamount_base";
			public const string TotalAmountLessFreight = "totalamountlessfreight";
			public const string TotalAmountLessFreight_Base = "totalamountlessfreight_base";
			public const string TotalDiscountAmount = "totaldiscountamount";
			public const string TotalDiscountAmount_Base = "totaldiscountamount_base";
			public const string TotalLineItemAmount = "totallineitemamount";
			public const string TotalLineItemAmount_Base = "totallineitemamount_base";
			public const string TotalLineItemDiscountAmount = "totallineitemdiscountamount";
			public const string TotalLineItemDiscountAmount_Base = "totallineitemdiscountamount_base";
			public const string TotalTax = "totaltax";
			public const string TotalTax_Base = "totaltax_base";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string TraversedPath = "traversedpath";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string opportunity_customer_accounts = "opportunity_customer_accounts";
			public const string opportunity_customer_contacts = "opportunity_customer_contacts";
			public const string opportunity_parent_account = "opportunity_parent_account";
			public const string opportunity_parent_contact = "opportunity_parent_contact";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Opportunity() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "opportunity";
		
		public const string EntityLogicalCollectionName = "opportunities";
		
		public const string EntitySetName = "opportunities";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Attribut interne pour le stockage de customerid. N’utilisez pas cet attribut directement ; utilisez plutôt parentaccountid.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public Microsoft.Xrm.Sdk.EntityReference AccountId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("accountid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountidname")]
		public string AccountIdName
		{
			get
			{
				if (this.FormattedValues.Contains("accountid"))
				{
					return this.FormattedValues["accountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountidyominame")]
		public string AccountIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("accountid"))
				{
					return this.FormattedValues["accountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Affiche la date et l'heure de fermeture ou d'annulation de l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualclosedate")]
		public System.Nullable<System.DateTime> ActualCloseDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualclosedate");
			}
			set
			{
				this.OnPropertyChanging("ActualCloseDate");
				this.SetAttributeValue("actualclosedate", value);
				this.OnPropertyChanged("ActualCloseDate");
			}
		}
		
		/// <summary>
		/// Tapez le montant réel du revenu de l'opportunité pour la production de rapports et l'analyse des ventes estimées par rapport aux ventes réelles. Le champ prend la valeur Revenu estimé par défaut lorsqu'une opportunité est remportée.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualvalue")]
		public Microsoft.Xrm.Sdk.Money ActualValue
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("actualvalue");
			}
			set
			{
				this.OnPropertyChanging("ActualValue");
				this.SetAttributeValue("actualvalue", value);
				this.OnPropertyChanged("ActualValue");
			}
		}
		
		/// <summary>
		/// Value of the Revenu réel in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualvalue_base")]
		public Microsoft.Xrm.Sdk.Money ActualValue_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("actualvalue_base");
			}
		}
		
		/// <summary>
		/// Tapez une valeur comprise entre 0 et 1 000 000 000 000 pour indiquer le budget potentiellement disponible du prospect.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("budgetamount")]
		public Microsoft.Xrm.Sdk.Money BudgetAmount
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("budgetamount");
			}
			set
			{
				this.OnPropertyChanging("BudgetAmount");
				this.SetAttributeValue("budgetamount", value);
				this.OnPropertyChanged("BudgetAmount");
			}
		}
		
		/// <summary>
		/// Value of the Montant budgétaire in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("budgetamount_base")]
		public Microsoft.Xrm.Sdk.Money BudgetAmount_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("budgetamount_base");
			}
		}
		
		/// <summary>
		/// Sélectionnez le statut probable du budget de la société du prospect. Cela permet de déterminer l'évaluation du prospect ou votre approche des ventes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("budgetstatus")]
		public virtual budgetstatus? BudgetStatus
		{
			get
			{
				return ((budgetstatus?)(EntityOptionSetEnum.GetEnum(this, "budgetstatus")));
			}
			set
			{
				this.OnPropertyChanging("BudgetStatus");
				this.SetAttributeValue("budgetstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("BudgetStatus");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("budgettypename")]
		public string BudgetTypeName
		{
			get
			{
				if (this.FormattedValues.Contains("budgetstatus"))
				{
					return this.FormattedValues["budgetstatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Affiche la campagne d'origine de l'opportunité. L'ID permet de suivre la réussite de la campagne.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("campaignid")]
		public Microsoft.Xrm.Sdk.EntityReference CampaignId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("campaignid");
			}
			set
			{
				this.OnPropertyChanging("CampaignId");
				this.SetAttributeValue("campaignid", value);
				this.OnPropertyChanged("CampaignId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("campaignidname")]
		public string CampaignIdName
		{
			get
			{
				if (this.FormattedValues.Contains("campaignid"))
				{
					return this.FormattedValues["campaignid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indiquez si les commentaires sur la proposition ont été capturés pour l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("captureproposalfeedback")]
		public System.Nullable<bool> CaptureProposalFeedback
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("captureproposalfeedback");
			}
			set
			{
				this.OnPropertyChanging("CaptureProposalFeedback");
				this.SetAttributeValue("captureproposalfeedback", value);
				this.OnPropertyChanged("CaptureProposalFeedback");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("captureproposalfeedbackname")]
		public string CaptureProposalFeedbackName
		{
			get
			{
				if (this.FormattedValues.Contains("captureproposalfeedback"))
				{
					return this.FormattedValues["captureproposalfeedback"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tapez un nombre compris entre 0 et 100 qui représente la probabilité de fermeture de l'opportunité. Cela permet d'aider l'équipe des ventes à convertir l'opportunité en vente.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("closeprobability")]
		public System.Nullable<int> CloseProbability
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("closeprobability");
			}
			set
			{
				this.OnPropertyChanging("CloseProbability");
				this.SetAttributeValue("closeprobability", value);
				this.OnPropertyChanged("CloseProbability");
			}
		}
		
		/// <summary>
		/// Indiquez si une proposition finale a été faite pour l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("completefinalproposal")]
		public System.Nullable<bool> CompleteFinalProposal
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("completefinalproposal");
			}
			set
			{
				this.OnPropertyChanging("CompleteFinalProposal");
				this.SetAttributeValue("completefinalproposal", value);
				this.OnPropertyChanged("CompleteFinalProposal");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("completefinalproposalname")]
		public string CompleteFinalProposalName
		{
			get
			{
				if (this.FormattedValues.Contains("completefinalproposal"))
				{
					return this.FormattedValues["completefinalproposal"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indiquez si une révision interne a été effectuée pour cette opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("completeinternalreview")]
		public System.Nullable<bool> CompleteInternalReview
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("completeinternalreview");
			}
			set
			{
				this.OnPropertyChanging("CompleteInternalReview");
				this.SetAttributeValue("completeinternalreview", value);
				this.OnPropertyChanged("CompleteInternalReview");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("completeinternalreviewname")]
		public string CompleteInternalReviewName
		{
			get
			{
				if (this.FormattedValues.Contains("completeinternalreview"))
				{
					return this.FormattedValues["completeinternalreview"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indiquez si le prospect a confirmé son intérêt pour vos offres. Cela permet d'évaluer la qualité du prospect et la probabilité de le transformer en opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("confirminterest")]
		public System.Nullable<bool> ConfirmInterest
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("confirminterest");
			}
			set
			{
				this.OnPropertyChanging("ConfirmInterest");
				this.SetAttributeValue("confirminterest", value);
				this.OnPropertyChanged("ConfirmInterest");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("confirminterestname")]
		public string ConfirmInterestName
		{
			get
			{
				if (this.FormattedValues.Contains("confirminterest"))
				{
					return this.FormattedValues["confirminterest"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Attribut interne pour le stockage de customerid. N’utilisez pas cet attribut directement ; utilisez plutôt parentcontactid.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		public Microsoft.Xrm.Sdk.EntityReference ContactId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contactid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactidname")]
		public string ContactIdName
		{
			get
			{
				if (this.FormattedValues.Contains("contactid"))
				{
					return this.FormattedValues["contactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactidyominame")]
		public string ContactIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("contactid"))
				{
					return this.FormattedValues["contactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Affiche le créateur de l'enregistrement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Affiche l'utilisateur qui a créé l'enregistrement pour un autre utilisateur.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tapez des notes sur la société ou l'organisation associée à l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currentsituation")]
		public string CurrentSituation
		{
			get
			{
				return this.GetAttributeValue<string>("currentsituation");
			}
			set
			{
				this.OnPropertyChanging("CurrentSituation");
				this.SetAttributeValue("currentsituation", value);
				this.OnPropertyChanged("CurrentSituation");
			}
		}
		
		/// <summary>
		/// Sélectionnez le compte client ou le contact pour fournir un lien rapide vers les détails supplémentaires du client, comme l'adresse, le numéro de téléphone, les activités et les commandes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		public Microsoft.Xrm.Sdk.EntityReference CustomerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("customerid");
			}
			set
			{
				this.OnPropertyChanging("CustomerId");
				this.SetAttributeValue("customerid", value);
				this.OnPropertyChanged("CustomerId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customeridname")]
		public string CustomerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("customerid"))
				{
					return this.FormattedValues["customerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customeridyominame")]
		public string CustomerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("customerid"))
				{
					return this.FormattedValues["customerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tapez des notes sur les besoins du client pour aider l'équipe des ventes à identifier les produits et les services qui pourraient correspondre.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerneed")]
		public string CustomerNeed
		{
			get
			{
				return this.GetAttributeValue<string>("customerneed");
			}
			set
			{
				this.OnPropertyChanging("CustomerNeed");
				this.SetAttributeValue("customerneed", value);
				this.OnPropertyChanged("CustomerNeed");
			}
		}
		
		/// <summary>
		/// Entrez des notes sur les points faibles du client pour aider l'équipe des ventes à identifier les produits et les services qui pourraient lui être utiles.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerpainpoints")]
		public string CustomerPainPoints
		{
			get
			{
				return this.GetAttributeValue<string>("customerpainpoints");
			}
			set
			{
				this.OnPropertyChanging("CustomerPainPoints");
				this.SetAttributeValue("customerpainpoints", value);
				this.OnPropertyChanged("CustomerPainPoints");
			}
		}
		
		/// <summary>
		/// Indiquez si vos notes incluent des informations sur les personnes qui prennent les décisions d'achat dans la société du prospect.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("decisionmaker")]
		public System.Nullable<bool> DecisionMaker
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("decisionmaker");
			}
			set
			{
				this.OnPropertyChanging("DecisionMaker");
				this.SetAttributeValue("decisionmaker", value);
				this.OnPropertyChanged("DecisionMaker");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("decisionmakername")]
		public string DecisionMakerName
		{
			get
			{
				if (this.FormattedValues.Contains("decisionmaker"))
				{
					return this.FormattedValues["decisionmaker"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Entrez des informations supplémentaires pour décrire l'opportunité, comme les produits qui peuvent être proposés à la vente ou les achats précédents du client.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Indiquez si une proposition a été faite pour l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("developproposal")]
		public System.Nullable<bool> DevelopProposal
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("developproposal");
			}
			set
			{
				this.OnPropertyChanging("DevelopProposal");
				this.SetAttributeValue("developproposal", value);
				this.OnPropertyChanged("DevelopProposal");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("developproposalname")]
		public string DevelopProposalName
		{
			get
			{
				if (this.FormattedValues.Contains("developproposal"))
				{
					return this.FormattedValues["developproposal"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tapez le montant de la remise pour l'opportunité si le client peut bénéficier de remises spéciales.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("discountamount")]
		public Microsoft.Xrm.Sdk.Money DiscountAmount
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("discountamount");
			}
			set
			{
				this.OnPropertyChanging("DiscountAmount");
				this.SetAttributeValue("discountamount", value);
				this.OnPropertyChanged("DiscountAmount");
			}
		}
		
		/// <summary>
		/// Value of the Montant de la remise sur opportunité in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("discountamount_base")]
		public Microsoft.Xrm.Sdk.Money DiscountAmount_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("discountamount_base");
			}
		}
		
		/// <summary>
		/// Tapez le taux de remise qui doit être appliqué au champ Totaux du produit pour inclure des remises supplémentaires pour le client dans l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("discountpercentage")]
		public System.Nullable<decimal> DiscountPercentage
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("discountpercentage");
			}
			set
			{
				this.OnPropertyChanging("DiscountPercentage");
				this.SetAttributeValue("discountpercentage", value);
				this.OnPropertyChanged("DiscountPercentage");
			}
		}
		
		/// <summary>
		/// The primary email address for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
		public string EmailAddress
		{
			get
			{
				return this.GetAttributeValue<string>("emailaddress");
			}
			set
			{
				this.OnPropertyChanging("EmailAddress");
				this.SetAttributeValue("emailaddress", value);
				this.OnPropertyChanged("EmailAddress");
			}
		}
		
		/// <summary>
		/// Entrez la date de fermeture prévue de l'opportunité pour permettre une prévision précise des revenus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("estimatedclosedate")]
		public System.Nullable<System.DateTime> EstimatedCloseDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("estimatedclosedate");
			}
			set
			{
				this.OnPropertyChanging("EstimatedCloseDate");
				this.SetAttributeValue("estimatedclosedate", value);
				this.OnPropertyChanged("EstimatedCloseDate");
			}
		}
		
		/// <summary>
		/// Tapez le montant estimé du revenu pour indiquer la vente ou la valeur potentielle de l'opportunité pour la prévision du revenu. Ce champ peut être renseigné par le système ou modifié selon la sélection du champ Revenu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("estimatedvalue")]
		public Microsoft.Xrm.Sdk.Money EstimatedValue
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("estimatedvalue");
			}
			set
			{
				this.OnPropertyChanging("EstimatedValue");
				this.SetAttributeValue("estimatedvalue", value);
				this.OnPropertyChanged("EstimatedValue");
			}
		}
		
		/// <summary>
		/// Value of the Revenu estimé in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("estimatedvalue_base")]
		public Microsoft.Xrm.Sdk.Money EstimatedValue_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("estimatedvalue_base");
			}
		}
		
		/// <summary>
		/// Indiquez si l'adéquation entre les besoins du prospect et vos offres a été évaluée.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("evaluatefit")]
		public System.Nullable<bool> EvaluateFit
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("evaluatefit");
			}
			set
			{
				this.OnPropertyChanging("EvaluateFit");
				this.SetAttributeValue("evaluatefit", value);
				this.OnPropertyChanged("EvaluateFit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("evaluatefitname")]
		public string EvaluateFitName
		{
			get
			{
				if (this.FormattedValues.Contains("evaluatefit"))
				{
					return this.FormattedValues["evaluatefit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Affiche le taux de conversion de la devise de l'enregistrement. Le taux de change permet de convertir tous les champs monétaires de l'enregistrement en devise locale dans la devise par défaut du système.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Indiquez si l'équipe des ventes a enregistré des notes détaillées sur les propositions et les réponses du compte.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filedebrief")]
		public System.Nullable<bool> FileDebrief
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("filedebrief");
			}
			set
			{
				this.OnPropertyChanging("FileDebrief");
				this.SetAttributeValue("filedebrief", value);
				this.OnPropertyChanged("FileDebrief");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filedebriefname")]
		public string FileDeBriefName
		{
			get
			{
				if (this.FormattedValues.Contains("filedebrief"))
				{
					return this.FormattedValues["filedebrief"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Entrez la date et l'heure de la décision finale de l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("finaldecisiondate")]
		public System.Nullable<System.DateTime> FinalDecisionDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("finaldecisiondate");
			}
			set
			{
				this.OnPropertyChanging("FinalDecisionDate");
				this.SetAttributeValue("finaldecisiondate", value);
				this.OnPropertyChanged("FinalDecisionDate");
			}
		}
		
		/// <summary>
		/// Tapez les frais de port ou de livraison des produits de l'opportunité pour les intégrer au calcul du champ Montant total.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("freightamount")]
		public Microsoft.Xrm.Sdk.Money FreightAmount
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("freightamount");
			}
			set
			{
				this.OnPropertyChanging("FreightAmount");
				this.SetAttributeValue("freightamount", value);
				this.OnPropertyChanged("FreightAmount");
			}
		}
		
		/// <summary>
		/// Value of the Frais de port in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("freightamount_base")]
		public Microsoft.Xrm.Sdk.Money FreightAmount_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("freightamount_base");
			}
		}
		
		/// <summary>
		/// Indiquez si des informations sur les concurrents sont incluses.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("identifycompetitors")]
		public System.Nullable<bool> IdentifyCompetitors
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("identifycompetitors");
			}
			set
			{
				this.OnPropertyChanging("IdentifyCompetitors");
				this.SetAttributeValue("identifycompetitors", value);
				this.OnPropertyChanged("IdentifyCompetitors");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("identifycompetitorsname")]
		public string IdentifyCompetitorsName
		{
			get
			{
				if (this.FormattedValues.Contains("identifycompetitors"))
				{
					return this.FormattedValues["identifycompetitors"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indiquez si les contacts client de cette opportunité ont été identifiés.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("identifycustomercontacts")]
		public System.Nullable<bool> IdentifyCustomerContacts
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("identifycustomercontacts");
			}
			set
			{
				this.OnPropertyChanging("IdentifyCustomerContacts");
				this.SetAttributeValue("identifycustomercontacts", value);
				this.OnPropertyChanged("IdentifyCustomerContacts");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("identifycustomercontactsname")]
		public string IdentifyCustomerContactsName
		{
			get
			{
				if (this.FormattedValues.Contains("identifycustomercontacts"))
				{
					return this.FormattedValues["identifycustomercontacts"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indiquez si vous avez enregistré qui poursuivra l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("identifypursuitteam")]
		public System.Nullable<bool> IdentifyPursuitTeam
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("identifypursuitteam");
			}
			set
			{
				this.OnPropertyChanging("IdentifyPursuitTeam");
				this.SetAttributeValue("identifypursuitteam", value);
				this.OnPropertyChanged("IdentifyPursuitTeam");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("identifypursuitteamname")]
		public string IdentifyPursuitTeamName
		{
			get
			{
				if (this.FormattedValues.Contains("identifypursuitteam"))
				{
					return this.FormattedValues["identifypursuitteam"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Indiquez si une personne de l'équipe des ventes a déjà contacté ce prospect.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("initialcommunication")]
		public virtual initialcommunication? InitialCommunication
		{
			get
			{
				return ((initialcommunication?)(EntityOptionSetEnum.GetEnum(this, "initialcommunication")));
			}
			set
			{
				this.OnPropertyChanging("InitialCommunication");
				this.SetAttributeValue("initialcommunication", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("InitialCommunication");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("initialcommunicationname")]
		public string InitialCommunicationName
		{
			get
			{
				if (this.FormattedValues.Contains("initialcommunication"))
				{
					return this.FormattedValues["initialcommunication"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isprivatename")]
		public string IsPrivateName
		{
			get
			{
				if (this.FormattedValues.Contains("isprivate"))
				{
					return this.FormattedValues["isprivate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indiquez si le revenu estimé pour l'opportunité doit être calculé automatiquement en fonction des produits entrés ou entré manuellement par un utilisateur.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isrevenuesystemcalculated")]
		public System.Nullable<bool> IsRevenueSystemCalculated
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isrevenuesystemcalculated");
			}
			set
			{
				this.OnPropertyChanging("IsRevenueSystemCalculated");
				this.SetAttributeValue("isrevenuesystemcalculated", value);
				this.OnPropertyChanged("IsRevenueSystemCalculated");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isrevenuesystemcalculatedname")]
		public string IsRevenueSystemCalculatedName
		{
			get
			{
				if (this.FormattedValues.Contains("isrevenuesystemcalculated"))
				{
					return this.FormattedValues["isrevenuesystemcalculated"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Contient l'horodatage de la dernière durée de suspension.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public System.Nullable<System.DateTime> LastOnHoldTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
			}
			set
			{
				this.OnPropertyChanging("LastOnHoldTime");
				this.SetAttributeValue("lastonholdtime", value);
				this.OnPropertyChanged("LastOnHoldTime");
			}
		}
		
		/// <summary>
		/// Affiche la personne à l'origine de la dernière mise à jour de l'enregistrement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Affiche la personne à l'origine de la dernière mise à jour de l'enregistrement pour un autre utilisateur.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Catégories utilisées pour la prévision.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_forecastcategory")]
		public virtual msdyn_opportunity_msdyn_forecastcategory? msdyn_forecastcategory
		{
			get
			{
				return ((msdyn_opportunity_msdyn_forecastcategory?)(EntityOptionSetEnum.GetEnum(this, "msdyn_forecastcategory")));
			}
			set
			{
				this.OnPropertyChanging("msdyn_forecastcategory");
				this.SetAttributeValue("msdyn_forecastcategory", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("msdyn_forecastcategory");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_forecastcategoryname")]
		public string msdyn_forecastcategoryName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_forecastcategory"))
				{
					return this.FormattedValues["msdyn_forecastcategory"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indique si l'opportunité est désactivée ou non
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gdproptout")]
		public System.Nullable<bool> msdyn_gdproptout
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_gdproptout");
			}
			set
			{
				this.OnPropertyChanging("msdyn_gdproptout");
				this.SetAttributeValue("msdyn_gdproptout", value);
				this.OnPropertyChanged("msdyn_gdproptout");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gdproptoutname")]
		public string msdyn_gdproptoutName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_gdproptout"))
				{
					return this.FormattedValues["msdyn_gdproptout"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_opportunitygrade")]
		public virtual msdyn_opportunitygradeoptset? msdyn_OpportunityGrade
		{
			get
			{
				return ((msdyn_opportunitygradeoptset?)(EntityOptionSetEnum.GetEnum(this, "msdyn_opportunitygrade")));
			}
			set
			{
				this.OnPropertyChanging("msdyn_OpportunityGrade");
				this.SetAttributeValue("msdyn_opportunitygrade", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("msdyn_OpportunityGrade");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_opportunitygradename")]
		public string msdyn_opportunitygradeName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_opportunitygrade"))
				{
					return this.FormattedValues["msdyn_opportunitygrade"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Correspond aux enregistrements KPI de l'opportunité
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_opportunitykpiid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_opportunitykpiid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_opportunitykpiid");
			}
			set
			{
				this.OnPropertyChanging("msdyn_opportunitykpiid");
				this.SetAttributeValue("msdyn_opportunitykpiid", value);
				this.OnPropertyChanged("msdyn_opportunitykpiid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_opportunitykpiidname")]
		public string msdyn_opportunitykpiidName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_opportunitykpiid"))
				{
					return this.FormattedValues["msdyn_opportunitykpiid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_opportunityscore")]
		public System.Nullable<int> msdyn_OpportunityScore
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_opportunityscore");
			}
			set
			{
				this.OnPropertyChanging("msdyn_OpportunityScore");
				this.SetAttributeValue("msdyn_opportunityscore", value);
				this.OnPropertyChanged("msdyn_OpportunityScore");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_opportunityscoretrend")]
		public virtual msdyn_opportunityscoretrendoptset? msdyn_OpportunityScoreTrend
		{
			get
			{
				return ((msdyn_opportunityscoretrendoptset?)(EntityOptionSetEnum.GetEnum(this, "msdyn_opportunityscoretrend")));
			}
			set
			{
				this.OnPropertyChanging("msdyn_OpportunityScoreTrend");
				this.SetAttributeValue("msdyn_opportunityscoretrend", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("msdyn_OpportunityScoreTrend");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_opportunityscoretrendname")]
		public string msdyn_opportunityscoretrendName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_opportunityscoretrend"))
				{
					return this.FormattedValues["msdyn_opportunityscoretrend"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Score prédictif
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_predictivescoreid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_PredictiveScoreId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_predictivescoreid");
			}
			set
			{
				this.OnPropertyChanging("msdyn_PredictiveScoreId");
				this.SetAttributeValue("msdyn_predictivescoreid", value);
				this.OnPropertyChanged("msdyn_PredictiveScoreId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_predictivescoreidname")]
		public string msdyn_PredictiveScoreIdName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_predictivescoreid"))
				{
					return this.FormattedValues["msdyn_predictivescoreid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_scorehistory")]
		public string msdyn_ScoreHistory
		{
			get
			{
				return this.GetAttributeValue<string>("msdyn_scorehistory");
			}
			set
			{
				this.OnPropertyChanging("msdyn_ScoreHistory");
				this.SetAttributeValue("msdyn_scorehistory", value);
				this.OnPropertyChanged("msdyn_ScoreHistory");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_scorereasons")]
		public string msdyn_ScoreReasons
		{
			get
			{
				return this.GetAttributeValue<string>("msdyn_scorereasons");
			}
			set
			{
				this.OnPropertyChanging("msdyn_ScoreReasons");
				this.SetAttributeValue("msdyn_scorereasons", value);
				this.OnPropertyChanged("msdyn_ScoreReasons");
			}
		}
		
		/// <summary>
		/// Identificateur unique du segment associé à l’opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_segmentid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_segmentid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_segmentid");
			}
			set
			{
				this.OnPropertyChanging("msdyn_segmentid");
				this.SetAttributeValue("msdyn_segmentid", value);
				this.OnPropertyChanged("msdyn_segmentid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_segmentidname")]
		public string msdyn_segmentidName
		{
			get
			{
				if (this.FormattedValues.Contains("msdyn_segmentid"))
				{
					return this.FormattedValues["msdyn_segmentid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_similaropportunities")]
		public string msdyn_similaropportunities
		{
			get
			{
				return this.GetAttributeValue<string>("msdyn_similaropportunities");
			}
			set
			{
				this.OnPropertyChanging("msdyn_similaropportunities");
				this.SetAttributeValue("msdyn_similaropportunities", value);
				this.OnPropertyChanged("msdyn_similaropportunities");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mso_approval_code")]
		public System.Nullable<bool> mso_approval_code
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("mso_approval_code");
			}
			set
			{
				this.OnPropertyChanging("mso_approval_code");
				this.SetAttributeValue("mso_approval_code", value);
				this.OnPropertyChanged("mso_approval_code");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mso_approval_codename")]
		public string mso_approval_codeName
		{
			get
			{
				if (this.FormattedValues.Contains("mso_approval_code"))
				{
					return this.FormattedValues["mso_approval_code"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mso_origincode")]
		public virtual mso_origincode? mso_origincode
		{
			get
			{
				return ((mso_origincode?)(EntityOptionSetEnum.GetEnum(this, "mso_origincode")));
			}
			set
			{
				this.OnPropertyChanging("mso_origincode");
				this.SetAttributeValue("mso_origincode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("mso_origincode");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mso_origincodename")]
		public string mso_origincodeName
		{
			get
			{
				if (this.FormattedValues.Contains("mso_origincode"))
				{
					return this.FormattedValues["mso_origincode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tapez un sujet ou un nom descriptif pour l'opportunité, comme la commande prévue ou le nom de la société.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// Choisissez le niveau de besoin de la société du prospect.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("need")]
		public virtual need? Need
		{
			get
			{
				return ((need?)(EntityOptionSetEnum.GetEnum(this, "need")));
			}
			set
			{
				this.OnPropertyChanging("Need");
				this.SetAttributeValue("need", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("Need");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("needname")]
		public string NeedName
		{
			get
			{
				if (this.FormattedValues.Contains("need"))
				{
					return this.FormattedValues["need"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Affiche la durée de suspension de l'opportunité, en minutes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public System.Nullable<int> OnHoldTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Identificateur unique de l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opportunityid")]
		public System.Nullable<System.Guid> OpportunityId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("opportunityid");
			}
			set
			{
				this.OnPropertyChanging("OpportunityId");
				this.SetAttributeValue("opportunityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("OpportunityId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opportunityid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.OpportunityId = value;
			}
		}
		
		/// <summary>
		/// Sélectionnez la valeur ou la priorité attendue de l'opportunité en fonction du revenu, du statut du client ou de la probabilité de fermeture.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opportunityratingcode")]
		public virtual opportunity_opportunityratingcode? OpportunityRatingCode
		{
			get
			{
				return ((opportunity_opportunityratingcode?)(EntityOptionSetEnum.GetEnum(this, "opportunityratingcode")));
			}
			set
			{
				this.OnPropertyChanging("OpportunityRatingCode");
				this.SetAttributeValue("opportunityratingcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("OpportunityRatingCode");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opportunityratingcodename")]
		public string OpportunityRatingCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("opportunityratingcode"))
				{
					return this.FormattedValues["opportunityratingcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choisissez le prospect à partir duquel l'opportunité a été créée pour la production de rapports et d'analyses. Le champ est en lecture seule après la création de l'opportunité et indique, par défaut, le prospect correct lorsqu'une opportunité est créée à partir d'un prospect converti.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadid")]
		public Microsoft.Xrm.Sdk.EntityReference OriginatingLeadId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("originatingleadid");
			}
			set
			{
				this.OnPropertyChanging("OriginatingLeadId");
				this.SetAttributeValue("originatingleadid", value);
				this.OnPropertyChanged("OriginatingLeadId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadidname")]
		public string OriginatingLeadIdName
		{
			get
			{
				if (this.FormattedValues.Contains("originatingleadid"))
				{
					return this.FormattedValues["originatingleadid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadidyominame")]
		public string OriginatingLeadIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("originatingleadid"))
				{
					return this.FormattedValues["originatingleadid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Choisissez un compte auquel connecter cette opportunité pour que la relation soit visible dans les rapports et les analyses et pour fournir un lien rapide vers des informations supplémentaires, comme des informations et des activités financières.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentAccountId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentaccountid");
			}
			set
			{
				this.OnPropertyChanging("ParentAccountId");
				this.SetAttributeValue("parentaccountid", value);
				this.OnPropertyChanged("ParentAccountId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountidname")]
		public string ParentAccountIdName
		{
			get
			{
				if (this.FormattedValues.Contains("parentaccountid"))
				{
					return this.FormattedValues["parentaccountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountidyominame")]
		public string ParentAccountIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("parentaccountid"))
				{
					return this.FormattedValues["parentaccountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choisissez un contact auquel connecter cette opportunité pour que la relation soit visible dans les rapports et les analyses.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontactid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentContactId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentcontactid");
			}
			set
			{
				this.OnPropertyChanging("ParentContactId");
				this.SetAttributeValue("parentcontactid", value);
				this.OnPropertyChanged("ParentContactId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontactidname")]
		public string ParentContactIdName
		{
			get
			{
				if (this.FormattedValues.Contains("parentcontactid"))
				{
					return this.FormattedValues["parentcontactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontactidyominame")]
		public string ParentContactIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("parentcontactid"))
				{
					return this.FormattedValues["parentcontactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Information indiquant si l'opportunité participe aux règles de workflow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participatesinworkflow")]
		public System.Nullable<bool> ParticipatesInWorkflow
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("participatesinworkflow");
			}
			set
			{
				this.OnPropertyChanging("ParticipatesInWorkflow");
				this.SetAttributeValue("participatesinworkflow", value);
				this.OnPropertyChanged("ParticipatesInWorkflow");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participatesinworkflowname")]
		public string ParticipatesInWorkflowName
		{
			get
			{
				if (this.FormattedValues.Contains("participatesinworkflow"))
				{
					return this.FormattedValues["participatesinworkflow"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indiquez si la proposition finale a été présentée au compte.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("presentfinalproposal")]
		public System.Nullable<bool> PresentFinalProposal
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("presentfinalproposal");
			}
			set
			{
				this.OnPropertyChanging("PresentFinalProposal");
				this.SetAttributeValue("presentfinalproposal", value);
				this.OnPropertyChanged("PresentFinalProposal");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("presentfinalproposalname")]
		public string PresentFinalProposalName
		{
			get
			{
				if (this.FormattedValues.Contains("presentfinalproposal"))
				{
					return this.FormattedValues["presentfinalproposal"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indiquez si une proposition a été présentée au compte pour l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("presentproposal")]
		public System.Nullable<bool> PresentProposal
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("presentproposal");
			}
			set
			{
				this.OnPropertyChanging("PresentProposal");
				this.SetAttributeValue("presentproposal", value);
				this.OnPropertyChanged("PresentProposal");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("presentproposalname")]
		public string PresentProposalName
		{
			get
			{
				if (this.FormattedValues.Contains("presentproposal"))
				{
					return this.FormattedValues["presentproposal"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choisissez les tarifs par défaut associés à cet enregistrement pour vous assurer que les produits associés à la campagne sont proposés aux prix corrects.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pricelevelid")]
		public Microsoft.Xrm.Sdk.EntityReference PriceLevelId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("pricelevelid");
			}
			set
			{
				this.OnPropertyChanging("PriceLevelId");
				this.SetAttributeValue("pricelevelid", value);
				this.OnPropertyChanged("PriceLevelId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pricelevelidname")]
		public string PriceLevelIdName
		{
			get
			{
				if (this.FormattedValues.Contains("pricelevelid"))
				{
					return this.FormattedValues["pricelevelid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Erreur de tarification de l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pricingerrorcode")]
		public virtual qooi_pricingerrorcode? PricingErrorCode
		{
			get
			{
				return ((qooi_pricingerrorcode?)(EntityOptionSetEnum.GetEnum(this, "pricingerrorcode")));
			}
			set
			{
				this.OnPropertyChanging("PricingErrorCode");
				this.SetAttributeValue("pricingerrorcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("PricingErrorCode");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pricingerrorcodename")]
		public string PricingErrorCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("pricingerrorcode"))
				{
					return this.FormattedValues["pricingerrorcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sélectionnez la priorité afin que les clients préférés ou les problèmes critiques soient traités rapidement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public virtual opportunity_prioritycode? PriorityCode
		{
			get
			{
				return ((opportunity_prioritycode?)(EntityOptionSetEnum.GetEnum(this, "prioritycode")));
			}
			set
			{
				this.OnPropertyChanging("PriorityCode");
				this.SetAttributeValue("prioritycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycodename")]
		public string PriorityCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("prioritycode"))
				{
					return this.FormattedValues["prioritycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Contains the id of the process associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			set
			{
				this.OnPropertyChanging("ProcessId");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("ProcessId");
			}
		}
		
		/// <summary>
		/// Entrez des notes sur la solution proposée pour l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("proposedsolution")]
		public string ProposedSolution
		{
			get
			{
				return this.GetAttributeValue<string>("proposedsolution");
			}
			set
			{
				this.OnPropertyChanging("ProposedSolution");
				this.SetAttributeValue("proposedsolution", value);
				this.OnPropertyChanged("ProposedSolution");
			}
		}
		
		/// <summary>
		/// Indiquez si une personne ou une commission est impliquée dans la procédure d'achat pour le prospect.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("purchaseprocess")]
		public virtual purchaseprocess? PurchaseProcess
		{
			get
			{
				return ((purchaseprocess?)(EntityOptionSetEnum.GetEnum(this, "purchaseprocess")));
			}
			set
			{
				this.OnPropertyChanging("PurchaseProcess");
				this.SetAttributeValue("purchaseprocess", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("PurchaseProcess");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("purchaseprocessname")]
		public string PurchaseProcessName
		{
			get
			{
				if (this.FormattedValues.Contains("purchaseprocess"))
				{
					return this.FormattedValues["purchaseprocess"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choisissez le délai probable nécessaire au prospect pour effectuer l'achat.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("purchasetimeframe")]
		public virtual purchasetimeframe? PurchaseTimeframe
		{
			get
			{
				return ((purchasetimeframe?)(EntityOptionSetEnum.GetEnum(this, "purchasetimeframe")));
			}
			set
			{
				this.OnPropertyChanging("PurchaseTimeframe");
				this.SetAttributeValue("purchasetimeframe", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("PurchaseTimeframe");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("purchasetimeframename")]
		public string PurchaseTimeframeName
		{
			get
			{
				if (this.FormattedValues.Contains("purchasetimeframe"))
				{
					return this.FormattedValues["purchasetimeframe"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indiquez si la décision concernant la poursuite de l'opportunité a été prise.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pursuitdecision")]
		public System.Nullable<bool> PursuitDecision
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("pursuitdecision");
			}
			set
			{
				this.OnPropertyChanging("PursuitDecision");
				this.SetAttributeValue("pursuitdecision", value);
				this.OnPropertyChanged("PursuitDecision");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pursuitdecisionname")]
		public string PursuitDecisionName
		{
			get
			{
				if (this.FormattedValues.Contains("pursuitdecision"))
				{
					return this.FormattedValues["pursuitdecision"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tapez des commentaires sur la qualification ou la notation du prospect.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("qualificationcomments")]
		public string QualificationComments
		{
			get
			{
				return this.GetAttributeValue<string>("qualificationcomments");
			}
			set
			{
				this.OnPropertyChanging("QualificationComments");
				this.SetAttributeValue("qualificationcomments", value);
				this.OnPropertyChanged("QualificationComments");
			}
		}
		
		/// <summary>
		/// Tapez des commentaires sur les devis associés à l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("quotecomments")]
		public string QuoteComments
		{
			get
			{
				return this.GetAttributeValue<string>("quotecomments");
			}
			set
			{
				this.OnPropertyChanging("QuoteComments");
				this.SetAttributeValue("quotecomments", value);
				this.OnPropertyChanged("QuoteComments");
			}
		}
		
		/// <summary>
		/// Indiquez si les commentaires sur la proposition ont été capturés et résolus pour l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolvefeedback")]
		public System.Nullable<bool> ResolveFeedback
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("resolvefeedback");
			}
			set
			{
				this.OnPropertyChanging("ResolveFeedback");
				this.SetAttributeValue("resolvefeedback", value);
				this.OnPropertyChanged("ResolveFeedback");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolvefeedbackname")]
		public string ResolveFeedbackName
		{
			get
			{
				if (this.FormattedValues.Contains("resolvefeedback"))
				{
					return this.FormattedValues["resolvefeedback"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sélectionnez la phase de vente de cette opportunité pour aider l'équipe des ventes à remporter cette opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("salesstage")]
		public virtual opportunity_salesstage? SalesStage
		{
			get
			{
				return ((opportunity_salesstage?)(EntityOptionSetEnum.GetEnum(this, "salesstage")));
			}
			set
			{
				this.OnPropertyChanging("SalesStage");
				this.SetAttributeValue("salesstage", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("SalesStage");
			}
		}
		
		/// <summary>
		/// Sélectionnez la phase du processus de vente pour cette opportunité pour indiquer la probabilité de fermeture de l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("salesstagecode")]
		public virtual opportunity_salesstagecode? SalesStageCode
		{
			get
			{
				return ((opportunity_salesstagecode?)(EntityOptionSetEnum.GetEnum(this, "salesstagecode")));
			}
			set
			{
				this.OnPropertyChanging("SalesStageCode");
				this.SetAttributeValue("salesstagecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("SalesStageCode");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("salesstagecodename")]
		public string SalesStageCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("salesstagecode"))
				{
					return this.FormattedValues["salesstagecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("salesstagename")]
		public string SalesStageName
		{
			get
			{
				if (this.FormattedValues.Contains("salesstage"))
				{
					return this.FormattedValues["salesstage"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Entrez la date et l'heure de la réunion de suivi de prospection avec le prospect.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("schedulefollowup_prospect")]
		public System.Nullable<System.DateTime> ScheduleFollowup_Prospect
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("schedulefollowup_prospect");
			}
			set
			{
				this.OnPropertyChanging("ScheduleFollowup_Prospect");
				this.SetAttributeValue("schedulefollowup_prospect", value);
				this.OnPropertyChanged("ScheduleFollowup_Prospect");
			}
		}
		
		/// <summary>
		/// Entrez la date et l'heure de la réunion de suivi de qualification avec le prospect.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("schedulefollowup_qualify")]
		public System.Nullable<System.DateTime> ScheduleFollowup_Qualify
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("schedulefollowup_qualify");
			}
			set
			{
				this.OnPropertyChanging("ScheduleFollowup_Qualify");
				this.SetAttributeValue("schedulefollowup_qualify", value);
				this.OnPropertyChanged("ScheduleFollowup_Qualify");
			}
		}
		
		/// <summary>
		/// Entrez la date et l'heure de la réunion de proposition pour l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduleproposalmeeting")]
		public System.Nullable<System.DateTime> ScheduleProposalMeeting
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduleproposalmeeting");
			}
			set
			{
				this.OnPropertyChanging("ScheduleProposalMeeting");
				this.SetAttributeValue("scheduleproposalmeeting", value);
				this.OnPropertyChanged("ScheduleProposalMeeting");
			}
		}
		
		/// <summary>
		/// Indiquez si une carte de remerciement a été envoyée au compte pour le choix de la proposition.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendthankyounote")]
		public System.Nullable<bool> SendThankYouNote
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("sendthankyounote");
			}
			set
			{
				this.OnPropertyChanging("SendThankYouNote");
				this.SetAttributeValue("sendthankyounote", value);
				this.OnPropertyChanged("SendThankYouNote");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendthankyounotename")]
		public string SendThankYouNoteName
		{
			get
			{
				if (this.FormattedValues.Contains("sendthankyounote"))
				{
					return this.FormattedValues["sendthankyounote"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ignorer le calcul du prix (utilisation interne)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("skippricecalculation")]
		public virtual qooi_skippricecalculation? SkipPriceCalculation
		{
			get
			{
				return ((qooi_skippricecalculation?)(EntityOptionSetEnum.GetEnum(this, "skippricecalculation")));
			}
			set
			{
				this.OnPropertyChanging("SkipPriceCalculation");
				this.SetAttributeValue("skippricecalculation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("SkipPriceCalculation");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("skippricecalculationname")]
		public string skippricecalculationName
		{
			get
			{
				if (this.FormattedValues.Contains("skippricecalculation"))
				{
					return this.FormattedValues["skippricecalculation"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choisissez le contrat de niveau de service (contrat SLA) que vous voulez appliquer à l'enregistrement d'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			set
			{
				this.OnPropertyChanging("SLAId");
				this.SetAttributeValue("slaid", value);
				this.OnPropertyChanged("SLAId");
			}
		}
		
		/// <summary>
		/// Dernier contrat SLA ayant été appliqué à cette opportunité. Ce champ est destiné à une utilisation interne uniquement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAInvokedId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedidname")]
		public string SLAInvokedIdName
		{
			get
			{
				if (this.FormattedValues.Contains("slainvokedid"))
				{
					return this.FormattedValues["slainvokedid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaname")]
		public string SLAName
		{
			get
			{
				if (this.FormattedValues.Contains("slaid"))
				{
					return this.FormattedValues["slaid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Contains the id of the stage where the entity is located.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			set
			{
				this.OnPropertyChanging("StageId");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("StageId");
			}
		}
		
		/// <summary>
		/// Indique si l'opportunité est ouverte, remportée ou perdue. Les opportunités remportées et perdues sont en lecture seule et ne peuvent pas être modifiées avant d'être réactivées.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual opportunity_statecode? StateCode
		{
			get
			{
				return ((opportunity_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StateCode");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sélectionnez le statut de l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual opportunity_statuscode? StatusCode
		{
			get
			{
				return ((opportunity_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indique l'ID de l'étape de workflow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stepid")]
		public System.Nullable<System.Guid> StepId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stepid");
			}
			set
			{
				this.OnPropertyChanging("StepId");
				this.SetAttributeValue("stepid", value);
				this.OnPropertyChanged("StepId");
			}
		}
		
		/// <summary>
		/// Affiche la phase actuelle dans le pipeline de vente pour l’opportunité. 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stepname")]
		public string StepName
		{
			get
			{
				return this.GetAttributeValue<string>("stepname");
			}
			set
			{
				this.OnPropertyChanging("StepName");
				this.SetAttributeValue("stepname", value);
				this.OnPropertyChanged("StepName");
			}
		}
		
		/// <summary>
		/// Nombre d'utilisateurs ou de conversations qui ont suivi l'enregistrement
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamsfollowed")]
		public System.Nullable<int> TeamsFollowed
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("teamsfollowed");
			}
			set
			{
				this.OnPropertyChanging("TeamsFollowed");
				this.SetAttributeValue("teamsfollowed", value);
				this.OnPropertyChanged("TeamsFollowed");
			}
		}
		
		/// <summary>
		/// Indiquez quand l'opportunité devrait être fermée.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timeline")]
		public virtual opportunity_timeline? TimeLine
		{
			get
			{
				return ((opportunity_timeline?)(EntityOptionSetEnum.GetEnum(this, "timeline")));
			}
			set
			{
				this.OnPropertyChanging("TimeLine");
				this.SetAttributeValue("timeline", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("TimeLine");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timelinename")]
		public string TimelineName
		{
			get
			{
				if (this.FormattedValues.Contains("timeline"))
				{
					return this.FormattedValues["timeline"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Temps total que je consacre aux courriers électroniques (lecture et écriture) et aux réunions pour l'enregistrement d'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timespentbymeonemailandmeetings")]
		public string TimeSpentByMeOnEmailAndMeetings
		{
			get
			{
				return this.GetAttributeValue<string>("timespentbymeonemailandmeetings");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Affiche le montant total dû, égal à la somme des produits, des remises, des frais de port et des taxes de l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalamount")]
		public Microsoft.Xrm.Sdk.Money TotalAmount
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totalamount");
			}
			set
			{
				this.OnPropertyChanging("TotalAmount");
				this.SetAttributeValue("totalamount", value);
				this.OnPropertyChanged("TotalAmount");
			}
		}
		
		/// <summary>
		/// Value of the Montant total in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalamount_base")]
		public Microsoft.Xrm.Sdk.Money TotalAmount_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totalamount_base");
			}
		}
		
		/// <summary>
		/// Affiche le montant total de produits de l'opportunité, déduction faite des remises. Cette valeur est ajoutée au montant des frais de port et des taxes dans le calcul du montant total de l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalamountlessfreight")]
		public Microsoft.Xrm.Sdk.Money TotalAmountLessFreight
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totalamountlessfreight");
			}
			set
			{
				this.OnPropertyChanging("TotalAmountLessFreight");
				this.SetAttributeValue("totalamountlessfreight", value);
				this.OnPropertyChanged("TotalAmountLessFreight");
			}
		}
		
		/// <summary>
		/// Value of the Total hors frais de port in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalamountlessfreight_base")]
		public Microsoft.Xrm.Sdk.Money TotalAmountLessFreight_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totalamountlessfreight_base");
			}
		}
		
		/// <summary>
		/// Affiche le montant total de la remise, basé sur le prix et le taux de remise entrés sur l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totaldiscountamount")]
		public Microsoft.Xrm.Sdk.Money TotalDiscountAmount
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totaldiscountamount");
			}
			set
			{
				this.OnPropertyChanging("TotalDiscountAmount");
				this.SetAttributeValue("totaldiscountamount", value);
				this.OnPropertyChanged("TotalDiscountAmount");
			}
		}
		
		/// <summary>
		/// Value of the Total de la remise in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totaldiscountamount_base")]
		public Microsoft.Xrm.Sdk.Money TotalDiscountAmount_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totaldiscountamount_base");
			}
		}
		
		/// <summary>
		/// Affiche la somme de tous les produits existants et hors catalogue inclus sur l'opportunité, basée sur les tarifs et les quantités.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totallineitemamount")]
		public Microsoft.Xrm.Sdk.Money TotalLineItemAmount
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totallineitemamount");
			}
			set
			{
				this.OnPropertyChanging("TotalLineItemAmount");
				this.SetAttributeValue("totallineitemamount", value);
				this.OnPropertyChanged("TotalLineItemAmount");
			}
		}
		
		/// <summary>
		/// Value of the Total détaillé in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totallineitemamount_base")]
		public Microsoft.Xrm.Sdk.Money TotalLineItemAmount_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totallineitemamount_base");
			}
		}
		
		/// <summary>
		/// Affiche la somme des montants de remise manuelle indiqués sur tous les produits inclus dans l'opportunité. Cette valeur ressort dans le champ Total détaillé sur l'opportunité et est ajoutée au montant ou au taux de remise spécifié sur l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totallineitemdiscountamount")]
		public Microsoft.Xrm.Sdk.Money TotalLineItemDiscountAmount
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totallineitemdiscountamount");
			}
			set
			{
				this.OnPropertyChanging("TotalLineItemDiscountAmount");
				this.SetAttributeValue("totallineitemdiscountamount", value);
				this.OnPropertyChanged("TotalLineItemDiscountAmount");
			}
		}
		
		/// <summary>
		/// Value of the Remise totale sur les lignes in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totallineitemdiscountamount_base")]
		public Microsoft.Xrm.Sdk.Money TotalLineItemDiscountAmount_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totallineitemdiscountamount_base");
			}
		}
		
		/// <summary>
		/// Affiche la somme des montants des taxes indiqués sur tous les produits inclus dans l'opportunité, incluse dans le calcul du champ Montant total pour l'opportunité.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totaltax")]
		public Microsoft.Xrm.Sdk.Money TotalTax
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totaltax");
			}
			set
			{
				this.OnPropertyChanging("TotalTax");
				this.SetAttributeValue("totaltax", value);
				this.OnPropertyChanged("TotalTax");
			}
		}
		
		/// <summary>
		/// Value of the Total des taxes in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totaltax_base")]
		public Microsoft.Xrm.Sdk.Money TotalTax_Base
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totaltax_base");
			}
		}
		
		/// <summary>
		/// Choisissez la devise locale de l'enregistrement pour vous assurer que les budgets sont validés dans la devise correcte.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			set
			{
				this.OnPropertyChanging("TraversedPath");
				this.SetAttributeValue("traversedpath", value);
				this.OnPropertyChanged("TraversedPath");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 opportunity_customer_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_customer_accounts")]
		public SampleModel.Account opportunity_customer_accounts
		{
			get
			{
				return this.GetRelatedEntity<SampleModel.Account>("opportunity_customer_accounts", null);
			}
			set
			{
				this.OnPropertyChanging("opportunity_customer_accounts");
				this.SetRelatedEntity<SampleModel.Account>("opportunity_customer_accounts", null, value);
				this.OnPropertyChanged("opportunity_customer_accounts");
			}
		}
		
		/// <summary>
		/// N:1 opportunity_customer_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_customer_contacts")]
		public SampleModel.Contact opportunity_customer_contacts
		{
			get
			{
				return this.GetRelatedEntity<SampleModel.Contact>("opportunity_customer_contacts", null);
			}
			set
			{
				this.OnPropertyChanging("opportunity_customer_contacts");
				this.SetRelatedEntity<SampleModel.Contact>("opportunity_customer_contacts", null, value);
				this.OnPropertyChanged("opportunity_customer_contacts");
			}
		}
		
		/// <summary>
		/// N:1 opportunity_parent_account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_parent_account")]
		public SampleModel.Account opportunity_parent_account
		{
			get
			{
				return this.GetRelatedEntity<SampleModel.Account>("opportunity_parent_account", null);
			}
			set
			{
				this.OnPropertyChanging("opportunity_parent_account");
				this.SetRelatedEntity<SampleModel.Account>("opportunity_parent_account", null, value);
				this.OnPropertyChanged("opportunity_parent_account");
			}
		}
		
		/// <summary>
		/// N:1 opportunity_parent_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontactid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_parent_contact")]
		public SampleModel.Contact opportunity_parent_contact
		{
			get
			{
				return this.GetRelatedEntity<SampleModel.Contact>("opportunity_parent_contact", null);
			}
			set
			{
				this.OnPropertyChanging("opportunity_parent_contact");
				this.SetRelatedEntity<SampleModel.Contact>("opportunity_parent_contact", null, value);
				this.OnPropertyChanged("opportunity_parent_contact");
			}
		}
	}
}
#pragma warning restore CS1591
